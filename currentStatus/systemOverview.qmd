---
title: "System Overview & Documentation "
description: "Brief Overview of System, Goals, and Materials"
author: "Victoria Parizot & Audrey Vo"
date: "12/9/24"
# categories:
#   - Final Project
#   - Brainstorm
draft: false
---

## Motivation 
Harvey Mudd College includes a plethora of student DJs that perform regularly around the 5Cs. As two currently aspiring DJs, we wanted to understand the technical workings of audio modifications and create a functional deck so that we could perform for our friends.

Insight into how we came up with this project can be found in Victoria's [blog](https://vparizot.github.io/hmc-e155-portfolio/posts/post6.html).

## Problem Statement
Our overarching goal for this project is to build an operational DJ Mixer that manipulates audio files based on user inputs. Our mixer will be able to control the frequency and gain of two input audio files based on physical inputs from the user. 

## Objectives
The objectives of this project is below. 

<ul>
<li>Use an external ADC to read in a Stereo file into the FPGA</li>
<li>Communicate audio data between the MCU and FPGA</li>
<li>Implement low pass and high pass digital filters using the FPGA</li>
<li>Vary audio volume based on user gain inputs</li>
<li>Output the manipulated audio onto speakers</li>
</ul>

## System Overview
The project is split between the MCU and FPGA. The MCU is in charge of (1) outputing the manipulated audio data with the onboard DAC with DMA, (2) interpreting and transferring the user input EQ values to the FPGA, and (3) acting as the controller for SPI communication. The FPGA acts as (1) the controller to PCM1808 ADC to read in audio and (2) implements digital filters to the data based on EQ values from the MCU. To communicate between the MCU and FPGA we use SPI for both the EQ values and audio data. 

The system is described in the block diagram and wiring diagram below. 


![FPGA Diagram for Project PariVo](images/actualfpga.png) 

![Wiring Schematic for Project PariVo](images/kicadschematic.png) 

## Bill of Materials
As our project deals with audio, in addition to the STM32L432KC MCU and UPduino v3.1 with the iCE40 UP5K, we used the following materials. Our new hardware was the PCM1808, an external ADC to convert stereo audio to digital to be read into the FPGA using I2S. More information on the PCM1808 can be found under FPGA & PCM1808 Design.

<table>
  <tr>
    <th>Item </th>
    <th>Part Number</th>
    <th>Quantity</th>
    <th>Cost per</th>
  </tr>
  <tr>
    <td> [PCM1808 ADC Breakout Board](https://www.ti.com/lit/ds/symlink/pcm1808.pdf?HQS=dis-dk-null-digikeymode-dsf-pf-null-wwe&ts=1733738047778&ref_url=https%253A%252F%252Fwww.ti.com%252Fgeneral%252Fdocs%252Fsuppproductinfo.tsp%253FdistId%253D10%2526gotoUrl%253Dhttps%253A%252F%252Fwww.ti.com%252Flit%252Fgpn%252Fpcm1808)  </td>
    <td> [PCM1808](https://www.amazon.com/dp/B07X3QLWR8?ref=ppx_yo2ov_dt_b_fed_asin_title) </td>
    <td>1</td>
    <td>7.99</td>
  </tr>
  <tr>
    <td> [10k Slide Potentiometer](https://www.bourns.com/docs/Product-Datasheets/pta.pdf) </td>
    <td> [PTA2043-2015CPB103-ND](https://www.digikey.com/en/products/detail/bourns-inc/PTA2043-2015CPB103/3781176) </td>
    <td>2</td>
    <td>$1.78</td>
  </tr>
  <tr>
    <td> [Breadboard-Friendly Stereo Headphone Jack](https://cdn-shop.adafruit.com/product-files/1699/STX3120.pdf) </td>
    <td> [Product ID: 1699](https://www.adafruit.com/product/1699) </td>
    <td>3</td>
    <td>$0.95</td>
  </tr>
  <tr>
    <td> Aux Cable </td>
    <td> Sourced from stockroom </td>
    <td>3</td>
    <td> n/a </td>
  </tr>
  <tr>
    <td> 8Ohm 4W Speakers </td>
    <td> Sourced from stockroom </td>
    <td>3</td>
    <td> n/a </td>
  </tr>
</table>


